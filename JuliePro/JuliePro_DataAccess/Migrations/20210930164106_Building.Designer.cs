// <auto-generated />
using System;
using JuliePro_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JuliePro_DataAccess.Migrations
{
    [DbContext(typeof(JulieProDbContext))]
    [Migration("20210930164106_Building")]
    partial class Building
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JuliePro_Models.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Email")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Photo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<double>("StartWeight")
                        .HasColumnType("float");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("int");

                    b.Property<int>("Trainer_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Objective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AchievedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<double>("DistanceKm")
                        .HasColumnType("float");

                    b.Property<double>("LostWeight")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Objective");
                });

            modelBuilder.Entity("JuliePro_Models.Models.ScheduledSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("DurationMin")
                        .HasColumnType("int");

                    b.Property<int?>("TrainingId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainingId1")
                        .HasColumnType("int");

                    b.Property<int>("Training_Id")
                        .HasColumnType("int");

                    b.Property<bool>("WithTrainer")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TrainingId");

                    b.HasIndex("TrainingId1");

                    b.ToTable("ScheduledSession");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Speciality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Speciality");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Email")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Photo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("SpecialityId")
                        .HasColumnType("int");

                    b.Property<int>("Speciality_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecialityId");

                    b.ToTable("Trainer");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("JuliePro_Models.Models.TrainingEquipment", b =>
                {
                    b.Property<int>("Training_Id")
                        .HasColumnType("int");

                    b.Property<int>("Equipment_Id")
                        .HasColumnType("int");

                    b.HasKey("Training_Id", "Equipment_Id");

                    b.HasIndex("Equipment_Id");

                    b.ToTable("TrainingEquipment");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Customer", b =>
                {
                    b.HasOne("JuliePro_Models.Models.Trainer", "Trainer")
                        .WithMany("Customers")
                        .HasForeignKey("TrainerId");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Objective", b =>
                {
                    b.HasOne("JuliePro_Models.Models.Customer", "Customer")
                        .WithMany("Objectives")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("JuliePro_Models.Models.ScheduledSession", b =>
                {
                    b.HasOne("JuliePro_Models.Models.Customer", "Customer")
                        .WithMany("ScheduledSessions")
                        .HasForeignKey("CustomerId");

                    b.HasOne("JuliePro_Models.Models.Trainer", "Training")
                        .WithMany()
                        .HasForeignKey("TrainingId");

                    b.HasOne("JuliePro_Models.Models.Training", null)
                        .WithMany("ScheduledSessions")
                        .HasForeignKey("TrainingId1");

                    b.Navigation("Customer");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Trainer", b =>
                {
                    b.HasOne("JuliePro_Models.Models.Speciality", "Speciality")
                        .WithMany("Trainers")
                        .HasForeignKey("SpecialityId");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("JuliePro_Models.Models.TrainingEquipment", b =>
                {
                    b.HasOne("JuliePro_Models.Models.Equipment", "Equipment")
                        .WithMany("TrainingEquipments")
                        .HasForeignKey("Equipment_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JuliePro_Models.Models.Training", "Training")
                        .WithMany("TrainingEquipments")
                        .HasForeignKey("Training_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Customer", b =>
                {
                    b.Navigation("Objectives");

                    b.Navigation("ScheduledSessions");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Equipment", b =>
                {
                    b.Navigation("TrainingEquipments");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Speciality", b =>
                {
                    b.Navigation("Trainers");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Trainer", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("JuliePro_Models.Models.Training", b =>
                {
                    b.Navigation("ScheduledSessions");

                    b.Navigation("TrainingEquipments");
                });
#pragma warning restore 612, 618
        }
    }
}
